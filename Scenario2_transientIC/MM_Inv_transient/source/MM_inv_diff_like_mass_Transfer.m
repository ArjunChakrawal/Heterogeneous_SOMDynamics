function [SOC, B, co2,mass_balance_error] = MM_inv_diff_like_mass_Transfer(us_n, ub_n, uco2_n, ksmm, km, kb, Nx, Ny, Iteration, alpha, dt, Imic, Y, omega, max_iter, tol, theta)
%%% SECTION TITLE
% DESCRIPTIVE TEXT
init_totC=sum([us_n(:); ub_n(:); uco2_n(:)]);
BDF = @(cbp, kbp) cbp .* kbp;
DF = @(csp, cbp, ksmmp, kmp) ksmmp .* csp .* cbp ./ (cbp + kmp);
mass_balance_error=0;
SOC = uco2_n; % unknown SOC at new time level
B = uco2_n;
co2 = uco2_n;
us_ = us_n;
ub_ = ub_n;
uco2_ = uco2_n;
us__= uco2_n;
ub__=uco2_n;
converged = false;
r = 1;

while converged == false
    if strcmp(Iteration, 'Jacobi') == true
        us__ = us_;
        ub__ = ub_;
    elseif strcmp(Iteration, 'SOR') == true
        us__ = SOC;
        ub__ = B;
    end
    %top boundary
    i = 1;
    j = 1; % top left  corner
    us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
    SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

    ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + ...
        (alpha) / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        -BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + ...
        (alpha) / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        -BDF(ub_n(i, j), kb(i, j))) ...
        +ub_n(i, j);
    B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

    uco2_new = theta * dt * (1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + ...
        (alpha) / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        +(1 - theta) * dt * (1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + ...
        (alpha) / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        +uco2_n(i, j);
    co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);

    i = 1; % top boundary Internal points
    for j = 2:Ny - 1
        us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (- DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
        SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

        ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_n(i, j), kb(i, j))) ...
            +ub_n(i, j);
        B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

        uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
            +(1 - theta) * dt * (1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            +uco2_n(i, j);
        co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
    end
    i = 1;
    j = Ny; % top right  corner
    us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (- DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
    SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

    ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1)))) ...
        -BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1)))) ...
        -BDF(ub_n(i, j), kb(i, j))) ...
        +ub_n(i, j);
    B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

    uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(Nx, j), ub__(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1))))) ...
        +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(Nx, j), ub_n(Nx, j), ksmm(Nx, j), km(Nx, j)) ...
        +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
        +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1))))) ...
        +uco2_n(i, j);
    co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);

    for i = 2:Nx - 1
        %left boudnary
        j = 1;
        us_new = Imic * dt + theta * dt * (- DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
        SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

        ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ... .
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_n(i, j), kb(i, j))) ...
            +ub_n(i, j);
        B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

        uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
            +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ... .
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
            +uco2_n(i, j);
        co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
        %Right boudnary
        j = Ny;
        us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
        SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

        ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1)))) ...
            -BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1)))) ...
            -BDF(ub_n(i, j), kb(i, j))) ...
            +ub_n(i, j);
        B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

        uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1))))) ...
            +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1))))) ...
            +uco2_n(i, j);
        co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
        %Interior points
        for j = 2:Ny - 1
            us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
                +(1 - theta) * dt * (- DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
            SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

            ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
                +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
                +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
                +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
                +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
                -BDF(ub_(i, j), kb(i, j))) ...
                +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
                +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
                +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
                +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
                +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
                -BDF(ub_n(i, j), kb(i, j))) ...
                +ub_n(i, j);
            B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

            uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
                +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
                +DF(us_(i+1, j), ub_(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
                +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
                +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
                +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
                +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
                +DF(us_n(i+1, j), ub_n(i+1, j), ksmm(i+1, j), km(i+1, j)) ...
                +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
                +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
                +uco2_n(i, j);
            co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
        end
    end
    %botoom boundary
    i = Nx;
    j = 1; %left botoom corner i+1 -> 1; j-1->Ny
    us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
    SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

    ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        -BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
        -BDF(ub_n(i, j), kb(i, j))) ...
        +ub_n(i, j);
    B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

    uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us__(i, Ny), ub__(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
        +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us_n(i, Ny), ub_n(i, Ny), ksmm(i, Ny), km(i, Ny)) ...
        +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
        +uco2_n(i, j);
    co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
    %botoom boundary internal points bbip
    i = Nx;
    for j = 2:Ny - 1
        us_new = Imic * dt + theta * dt * (- DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
        SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

        ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_(i, j), kb(i, j))) ...
            +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1)))) ...
            -BDF(ub_n(i, j), kb(i, j))) ...
            +ub_n(i, j);
        B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

        uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
            +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_(i, j+1), ub_(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
            +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
            +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
            +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
            +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
            +DF(us_n(i, j+1), ub_n(i, j+1), ksmm(i, j+1), km(i, j+1))))) ...
            +uco2_n(i, j);
        co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);
    end

    i = Nx;
    j = Ny; % right  bottom corner i+1 -> 1; j+1->1
    us_new = Imic * dt + theta * dt * (-DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) + BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (-DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) + BDF(ub_n(i, j), kb(i, j))) + us_n(i, j);
    SOC(i, j) = omega * us_new + (1 - omega) * us_(i, j);

    ub_new = theta * dt * (Y * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1)))) ...
        -BDF(ub_(i, j), kb(i, j))) ...
        +(1 - theta) * dt * (Y * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1)))) ...
        -BDF(ub_n(i, j), kb(i, j))) ...
        +ub_n(i, j);
    B(i, j) = omega * ub_new + (1 - omega) * ub_(i, j);

    uco2_new = theta * dt * ((1 - Y) * ((1 - alpha) * DF(us_(i, j), ub_(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us__(i-1, j), ub__(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_(1, j), ub_(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us__(i, j-1), ub__(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_(i, 1), ub_(i, 1), ksmm(i, 1), km(i, 1))))) ...
        +(1 - theta) * dt * ((1 - Y) * ((1 - alpha) * DF(us_n(i, j), ub_n(i, j), ksmm(i, j), km(i, j)) ...
        +alpha / 4 * (DF(us_n(i-1, j), ub_n(i-1, j), ksmm(i-1, j), km(i-1, j)) ...
        +DF(us_n(1, j), ub_n(1, j), ksmm(1, j), km(1, j)) ...
        +DF(us_n(i, j-1), ub_n(i, j-1), ksmm(i, j-1), km(i, j-1)) ...
        +DF(us_n(i, 1), ub_n(i, 1), ksmm(i, 1), km(i, 1))))) ...
        +uco2_n(i, j);
    co2(i, j) = omega * uco2_new + (1 - omega) * uco2_(i, j);

    r = r + 1;
    mass_balance_error=abs((sum(us_(:))+sum(ub_(:))+sum(uco2_(:)) - Imic * dt *Nx*Ny -init_totC)./init_totC);
    % Stopping criteria
    q1 = max([max(max(abs(SOC-us_))), max(max(abs(B-ub_)))]);
%     converged = q1 < tol | r >= max_iter ;
    converged = q1 < tol && mass_balance_error< 1e-12 || r >= max_iter;
    us_ = SOC;
    ub_ = B;
    uco2_ = co2;
    
    
end